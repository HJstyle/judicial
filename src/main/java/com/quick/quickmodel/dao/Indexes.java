/*
 * This file is generated by jOOQ.
 */
package com.quick.quickmodel.dao;


import com.quick.quickmodel.dao.tables.Docs;
import com.quick.quickmodel.dao.tables.Knowledge;
import com.quick.quickmodel.dao.tables.Ob;
import com.quick.quickmodel.dao.tables.User;

import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>knowledgemap</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index DOCS_PRIMARY = Indexes0.DOCS_PRIMARY;
    public static final Index KNOWLEDGE_PRIMARY = Indexes0.KNOWLEDGE_PRIMARY;
    public static final Index OB_PRIMARY = Indexes0.OB_PRIMARY;
    public static final Index USER_PRIMARY = Indexes0.USER_PRIMARY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index DOCS_PRIMARY = Internal.createIndex("PRIMARY", Docs.DOCS, new OrderField[] { Docs.DOCS.ID }, true);
        public static Index KNOWLEDGE_PRIMARY = Internal.createIndex("PRIMARY", Knowledge.KNOWLEDGE, new OrderField[] { Knowledge.KNOWLEDGE.ID }, true);
        public static Index OB_PRIMARY = Internal.createIndex("PRIMARY", Ob.OB, new OrderField[] { Ob.OB.ID }, true);
        public static Index USER_PRIMARY = Internal.createIndex("PRIMARY", User.USER, new OrderField[] { User.USER.USERNAME }, true);
    }
}
