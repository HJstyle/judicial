/*
 * This file is generated by jOOQ.
 */
package com.quick.quickmodel.dao.tables.pojos;


import com.quick.quickmodel.dao.tables.interfaces.IDocs;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Docs implements IDocs {

    private static final long serialVersionUID = 1324288774;

    private Integer id;
    private String  name;
    private String  href;
    private Object  objectRelation;
    private Object  knowledgeRelation;
    private Object  docRelation;
    private Object  property;

    public Docs() {}

    public Docs(IDocs value) {
        this.id = value.getId();
        this.name = value.getName();
        this.href = value.getHref();
        this.objectRelation = value.getObjectRelation();
        this.knowledgeRelation = value.getKnowledgeRelation();
        this.docRelation = value.getDocRelation();
        this.property = value.getProperty();
    }

    public Docs(
        Integer id,
        String  name,
        String  href,
        Object  objectRelation,
        Object  knowledgeRelation,
        Object  docRelation,
        Object  property
    ) {
        this.id = id;
        this.name = name;
        this.href = href;
        this.objectRelation = objectRelation;
        this.knowledgeRelation = knowledgeRelation;
        this.docRelation = docRelation;
        this.property = property;
    }

    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @Override
    public String getName() {
        return this.name;
    }

    @Override
    public void setName(String name) {
        this.name = name;
    }

    @Override
    public String getHref() {
        return this.href;
    }

    @Override
    public void setHref(String href) {
        this.href = href;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object getObjectRelation() {
        return this.objectRelation;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setObjectRelation(Object objectRelation) {
        this.objectRelation = objectRelation;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object getKnowledgeRelation() {
        return this.knowledgeRelation;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setKnowledgeRelation(Object knowledgeRelation) {
        this.knowledgeRelation = knowledgeRelation;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object getDocRelation() {
        return this.docRelation;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setDocRelation(Object docRelation) {
        this.docRelation = docRelation;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object getProperty() {
        return this.property;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setProperty(Object property) {
        this.property = property;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Docs (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(href);
        sb.append(", ").append(objectRelation);
        sb.append(", ").append(knowledgeRelation);
        sb.append(", ").append(docRelation);
        sb.append(", ").append(property);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IDocs from) {
        setId(from.getId());
        setName(from.getName());
        setHref(from.getHref());
        setObjectRelation(from.getObjectRelation());
        setKnowledgeRelation(from.getKnowledgeRelation());
        setDocRelation(from.getDocRelation());
        setProperty(from.getProperty());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IDocs> E into(E into) {
        into.from(this);
        return into;
    }
}
